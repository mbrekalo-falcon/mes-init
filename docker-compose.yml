version: '3.3'

services:
  sockets:
    container_name: backend_tempname_sockets
    restart: always
    build: ./
    environment:
      - "TZ=Europe/London"
    command: daphne -b 0.0.0.0 -p 8001 app.asgi:application
    ports:
      - "9999:8001"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - redis
    
  backend:
    container_name: backend_tempname
    restart: always
    build: ./
    environment:
      - "TZ=Europe/London"
    command: gunicorn app.asgi:application --workers 4 --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker
    volumes:
      - ./:/usr/src/app/
      - staticfiles_volume:/usr/src/app/staticfiles
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - log_volume:/usr/src/app/log
    ports:
      - "2559:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - redis
  db:
    container_name: database_tempname
    image: postgres:14
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5553:5432"
  nginx:
    container_name: nginx_tempname
    restart: always
    build: ./nginx
    volumes:
      - staticfiles_volume:/usr/src/app/staticfiles
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - log_volume:/usr/src/app/log
    ports:
      - "2557:80"
    depends_on:
      - backend
    links:
      - backend:backend
  redis:
    container_name: redis_tempname
    image: redis:5-alpine

  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: rabbitmq:3.12.2-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQGO21
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5672:5672
      - 5671:5671
      - 15672:15672
      - 15671:15671

  celery-worker:
    container_name: celery-worker
    build: ./
    command: celery -A app worker -l info -B --concurrency 6
    volumes:
      - ./:/usr/src/app/
    env_file:
      - .env
    links:
      - redis:redis
      - rabbitmq:rabbitmq
    depends_on:
      - backend
      - redis
      - rabbitmq
  
  dashboard:
    build: ./
    command: celery flower -A app --port=5555 --broker=${CELERY_BROKER}
    ports:
      - "5555:5555"
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECURITY_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - backend
      - redis
      - celery-worker

volumes:
  postgres-volume:
  static_volume:
  staticfiles_volume:
  media_volume:
  log_volume:
  rabbitmq_data:

